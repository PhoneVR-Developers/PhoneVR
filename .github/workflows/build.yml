name: CI

env:
  MAIN_PROJECT_MODULE: app
  PROJECT_NAME: PhoneVR

  SOLUTION_FILE_PATH: code\windows\PhoneVR\PhoneVR.sln
  SOLUTION_DIR: code\windows\PhoneVR\

  GRADLE_DIR: code/mobile/android/PhoneVR
  ORG_FULL: PhoneVR-Developers/PhoneVR

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# defaults:
#   run:
#     working-directory: code/mobile/android/PhoneVR

jobs:
  Build_PVR_Server:
    name: Build PhoneVR Server
    strategy:
      fail-fast: false
      matrix:
        config: [Release, Debug]
        platform: [x64, x86]
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    # https://github.com/actions/runner-images/issues/842#issuecomment-1495115166
    - name: Install MSVC 2015 (v140) and Windows 8.1 SDK
      shell: powershell
      run: |
        $VS_BTOOLS_EXE="vs_buildtools.exe"
        $VS_BTOOLS_URI="https://aka.ms/vs/15/release/vs_buildtools.exe"
        Invoke-WebRequest -Uri $VS_BTOOLS_URI -OutFile $VS_BTOOLS_EXE
        Start-Process -FilePath ./vs_BuildTools.exe -ArgumentList `
        "--add", "Microsoft.VisualStudio.Component.VC.140", `
        "--add", "Microsoft.VisualStudio.Component.Windows81SDK", `
        "--quiet", "--norestart", "--force", "--wait" -Wait -PassThru

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Building ${{matrix.platform}}-${{matrix.config}}
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.config}} /p:Platform=${{matrix.platform}} ${{env.SOLUTION_FILE_PATH}}

    - name: Upload Build outputs
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}-Server-${{ matrix.config }}
        path: ${{ env.SOLUTION_DIR }}\${{ matrix.config }}
  
  Build_APK:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        id: vars
        shell: bash
        run: |
          echo "date_today=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'
     
      # Only for Testing github-actions
      - uses: actions-rs/toolchain@v1
        if: ${{ github.event.pull_request.head.repo.full_name != '${{ env.ORG_FULL }}' }} # Only run if not on master repo
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
        if: ${{ github.event.pull_request.head.repo.full_name != '${{ env.ORG_FULL }}' }} # Only run if not on master repo
        with:
          cache-on-failure: true
          workspaces: ${{env.GRADLE_DIR}}/ALVR/
      
      - uses: gradle/gradle-build-action@v2
        if: ${{ github.event.pull_request.head.repo.full_name != '${{ env.ORG_FULL }}' }} # Only run if not on master repo
        with:
          build-root-directory: ${{env.GRADLE_DIR}}
          cache-read-only: ${{ false }}

      - name: Prepare deps
        run: |          
          ls -alh
          cd code/mobile/android/PhoneVR
          chmod +x prepare-alvr-deps.sh
          bash prepare-alvr-deps.sh
      
      - name: Change gradle wrapper permissions
        run: |
          cd code/mobile/android/PhoneVR
          chmod +x ./gradlew
          ls -alh
          ls -alh app

      # Create APK Debug
      - name: Build apk debug project (APK)
        run:  |
          cd code/mobile/android/PhoneVR
          ./gradlew :${{ env.MAIN_PROJECT_MODULE }}:assembleDebug --warning-mode=all --stacktrace -Dorg.gradle.java.home=${{env.JAVA_HOME}}

      # Create APK Release
      - name: Build apk release project (APK)
        env:
          Key: ${{ secrets.KEY }}
          Store: ${{ secrets.STORE }}
        run:  |
          cd code/mobile/android/PhoneVR
          ./gradlew :${{ env.MAIN_PROJECT_MODULE }}:assemble --warning-mode=all --stacktrace -Dorg.gradle.java.home=${{env.JAVA_HOME}}

      # Upload Artifact Build
      # Noted For Output [MAIN_PROJECT_MODULE]/build/outputs/apk/debug/
      - name: Upload APK Debug
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-debug-${{ steps.vars.outputs.sha_short }}-${{ env.date_today }} APK
          path: ${{env.GRADLE_DIR}}/${{ env.MAIN_PROJECT_MODULE }}/build/outputs/apk/debug/

      # Noted For Output [MAIN_PROJECT_MODULE]/build/outputs/apk/release/
      - name: Upload APK Release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-${{ steps.vars.outputs.sha_short }}-${{ env.date_today }} APK
          path: ${{env.GRADLE_DIR}}/${{ env.MAIN_PROJECT_MODULE }}/build/outputs/apk/release/
  
      - name: Upload Build outputs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: build-files
          path: ${{ env.GRADLE_DIR }}/app/.cxx/

  Test_APK:
    name: Test APK
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: 17

      # Only for Testing github-actions
      - uses: actions-rs/toolchain@v1
        if: ${{ github.event.pull_request.head.repo.full_name != '${{ env.ORG_FULL }}' }} # Only run if not on master repo
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
        if: ${{ github.event.pull_request.head.repo.full_name != '${{ env.ORG_FULL }}' }} # Only run if not on master repo
        with:
          cache-on-failure: true
          workspaces: ${{env.GRADLE_DIR}}/ALVR/
      
      - uses: gradle/gradle-build-action@v2
        if: ${{ github.event.pull_request.head.repo.full_name != '${{ env.ORG_FULL }}' }} # Only run if not on master repo
        with:
          build-root-directory: ${{env.GRADLE_DIR}}
          cache-read-only: ${{ false }}

      - name: Prepare deps
        shell: bash
        run: |          
          ls -alh
          cd code/mobile/android/PhoneVR
          chmod +x prepare-alvr-deps.sh
          bash prepare-alvr-deps.sh

      - name: Change gradle wrapper permissions
        run: |
          cd code/mobile/android/PhoneVR
          chmod +x ./gradlew
          ls -alh
          ls -alh app

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      
      # Cache APK gradle tasks
      - name: Build apk debug project (APK)
        run:  |
          cd code/mobile/android/PhoneVR
          ./gradlew :${{ env.MAIN_PROJECT_MODULE }}:assembleDebug --warning-mode=all --stacktrace -Dorg.gradle.java.home=${{env.JAVA_HOME}}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ${{env.GRADLE_DIR}}
          api-level: ${{ matrix.api-level }}
          target: google_apis
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          working-directory: ${{env.GRADLE_DIR}}
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            brew install telnet

            chmod +x app/src/androidTest/java/viritualisres/phonevr/utils/pvr-adb-telnet.sh
            bash app/src/androidTest/java/viritualisres/phonevr/utils/pvr-adb-telnet.sh &

            adb logcat -v color &
            ./gradlew connectedCheck --warning-mode=all --stacktrace -Dorg.gradle.java.home=${{env.JAVA_HOME}}
            adb logcat >> logcat.log

            killall `ps -aux | grep pvr-adb-telnet | grep -v grep | awk '{ print $1 }'` && killall inotifywait


      # build/outputs/connected_android_test_additional_output/debugAndroidTest/connected/GPlay_Pixel_2_API_30(AVD) - 11/ALVRActivityTest_saveDeviceScreenBitmap.png
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots
          path: |
            **/app/build/outputs/connected_android_test_additional_output/debugAndroidTest/connected/*
      
      # app\build\outputs\androidTest-results\connected\TEST-GPlay_Pixel_2_API_30(AVD) - 11-_app-.xml
      - name: Publish Test Results in Comment
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        # if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && always()
        if: always()
        with:
          report_individual_runs: true
          report_suite_logs: 'any'
          deduplicate_classes_by_file_name: true          
          comment_title: '🛠 Test Results'
          files: |
            app/build/outputs/androidTest-results/**/TEST-*.xml
      
      - uses: iterative/setup-cml@v1
        if: always()
      
      - name: Publish Screenshots - Find Comment
        if: always()
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '# 📷 Screenshots of tests:'
          direction: last
          comment-author: 'github-actions[bot]'

      - name: Publish Screenshots - build comment
        if: always()
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT: ${{ github.event_name }}
          REF: ${{ github.ref }}
        shell: bash
        run: |
          echo "# 📷 Screenshots of tests:" >> comment.md
          echo "" >> comment.md

          # for each AVD Image
          for ss_test_avd in app/build/outputs/connected_android_test_additional_output/debugAndroidTest/connected/*; do 

            ss_test_avd_desc=$(basename "$ss_test_avd")

            echo "" >> comment.md
            echo "### 📱 $ss_test_avd_desc" >> comment.md
            echo "" >> comment.md

            # for each .png in that AVD folder
            for ss_test in "app/build/outputs/connected_android_test_additional_output/debugAndroidTest/connected/$ss_test_avd/"*.png; do 
              
              ss_test_desc=$(basename "$ss_test" .png)
              
              echo "#### 🔧 $ss_test_desc" >> comment.md

              echo '<p float="left">' >> comment.md
              cml-publish "$ss_test" | sed -E 's/.+/<img width="90%" src="\0"\/>/' >> comment.md
              echo '</p>' >> comment.md

            done
          done

          if [ "$EVENT" == 'pull_request' ]
          then
            sha=${{ github.event.pull_request.head.sha}}
          elif [ "$EVENT" == 'workflow_run' ]
          then
            sha=${{ github.event.workflow_run.head_sha}}
          else
            sha=$GITHUB_SHA
          fi

          echo "" >> comment.md
          echo "###### For commit $sha" >> comment.md
      
      - name: Publish Screehnshots - Update or Create Comment
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && always()
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body-file: comment.md
          edit-mode: replace
          issue-number: ${{ github.event.number }}
